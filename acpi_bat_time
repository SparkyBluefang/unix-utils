#!/bin/sh

# Copyright (C) 2014 Matthew Turnbull. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this 
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice, 
#     this list of conditions and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  3. Neither the name of Caligon Studios nor the names of its contributors may 
#     be used to endorse or promote products derived from this software without 
#     specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

for BAT in /sys/class/power_supply/BAT*; do
	if [ -d "${BAT}" ]; then
		BATTERY="${BAT}"
		break
	fi
done

if [ -z "${BATTERY}" ]; then
	echo "Unknown"
	exit
fi

remaining=`cat "${BATTERY}/energy_now"`
last_full=`cat "${BATTERY}/energy_full"`
power_now=`cat "${BATTERY}/power_now"`
is_ac=`cat "/sys/class/power_supply/AC/online"`

state=""
hours=0
minutes=0
percent=$(( ( remaining * 100 ) / last_full ))

if [ $is_ac -gt 0 ]; then
	# charging
	state="C"
	if [ $power_now -gt 0 ]; then
		minutes=$(( ( ( last_full - remaining ) * 60 ) / power_now ))
	fi
else
	# discharging
	state="D"
	if [ $power_now -gt 0 ]; then
		minutes=$(( ( remaining * 60 ) / power_now ))
	fi
fi

while [ $minutes -ge 60 ]; do
	minutes=$(( minutes - 60 ))
	hours=$(( hours + 1 ))
done

if [ $minutes -lt 10 ]; then
	minutes="0$minutes"
fi

echo "$hours:$minutes ($state)"

